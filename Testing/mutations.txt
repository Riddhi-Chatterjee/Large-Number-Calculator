approximator_roundOff : ArOR : approximator.cpp : 6 : 34 : 6: 35 : -

approximator_roundOff : ArOR : approximator.cpp : 6 : 34 : 6: 35 : *

approximator_roundOff : ArOR : approximator.cpp : 6 : 34 : 6: 35 : /

approximator_roundOff : ArOR : approximator.cpp : 6 : 34 : 6: 35 : %

approximator_roundOff : ArOR : approximator.cpp : 6 : 47 : 6: 48 : -

approximator_roundOff : ArOR : approximator.cpp : 6 : 47 : 6: 48 : *

approximator_roundOff : ArOR : approximator.cpp : 6 : 47 : 6: 48 : /

approximator_roundOff : ArOR : approximator.cpp : 6 : 47 : 6: 48 : %

approximator_roundOff : ArOR : approximator.cpp : 6 : 59 : 6: 60 : -

approximator_roundOff : ROR : approximator.cpp : 13 : 14 : 13 : 15 : >=

approximator_roundOff : ROR : approximator.cpp : 13 : 14 : 13 : 15 : >

approximator_roundOff : ROR : approximator.cpp : 13 : 14 : 13 : 15 : !=

approximator_roundOff : UOD : approximator.cpp : 13 : 21 : 13 : 21 : -

approximator_roundOff : ArOR : approximator.cpp : 13 : 20 : 13 : 21 : /

approximator_roundOff : ArOR : approximator.cpp : 13 : 20 : 13 : 21 : +

approximator_roundOff : ArOR : approximator.cpp : 13 : 20 : 13 : 21 : %

approximator_roundOff : ArOR : approximator.cpp : 13 : 20 : 13 : 21 : -

approximator_roundOff : ROR : approximator.cpp : 21 : 14 : 21 : 16 : <=

approximator_roundOff : ROR : approximator.cpp : 21 : 14 : 21 : 16 : !=

approximator_roundOff : ROR : approximator.cpp : 21 : 14 : 21 : 16 : >

approximator_roundOff : ROR : approximator.cpp : 21 : 14 : 21 : 16 : <

approximator_roundOff : ROR : approximator.cpp : 21 : 28 : 21 : 30 : <

approximator_roundOff : ROR : approximator.cpp : 21 : 28 : 21 : 30 : >

approximator_roundOff : ROR : approximator.cpp : 21 : 28 : 21 : 30 : >=

approximator_roundOff : ROR : approximator.cpp : 21 : 28 : 21 : 30 : !=

approximator_roundOff : ArOR : approximator.cpp : 24 : 51 : 24 : 52 : -

approximator_roundOff : ArOR : approximator.cpp : 24 : 51 : 24 : 52 : /

approximator_roundOff : ArOR : approximator.cpp : 24 : 51 : 24 : 52 : *

approximator_roundOff : ArOR : approximator.cpp : 24 : 51 : 24 : 52 : %

approximator_roundOff : ArOR : approximator.cpp : 24 : 59 : 24 : 60 : -

approximator_roundOff : ArOR : approximator.cpp : 24 : 59 : 24 : 60 : /

approximator_roundOff : ArOR : approximator.cpp : 24 : 59 : 24 : 60 : *

approximator_roundOff : ArOR : approximator.cpp : 24 : 59 : 24 : 60 : %

approximator_roundOff : AVI : approximator.cpp : 26 : 23 : 26 : 32 : (-abs(precision))

approximator_roundOff : COR : approximator.cpp : 21 : 19 : 21 : 21 : ||

approximator_roundOff : COR : approximator.cpp : 21 : 19 : 21 : 21 : ^

approximator_vecInverter : ArOR : approximator.cpp : 35 : 20 : 35 : 21 : +

approximator_vecInverter : ROR : approximator.cpp : 35 : 25 : 35 : 27 : <=

approximator_vecInverter : ROR : approximator.cpp : 35 : 25 : 35 : 27 : =

approximator_vecInverter : ROR : approximator.cpp : 35 : 25 : 35 : 27 : <

approximator_vecInverter : ROR : approximator.cpp : 35 : 25 : 35 : 27 : >

approximator_vecInverter : ArOR : approximator.cpp : 37 : 20 : 37 : 21 : +

approximator_vecInverter : ArOR : approximator.cpp : 37 : 24 : 37 : 25 : +

approximator_vecInverter : ArOR : approximator.cpp : 37 : 24 : 37 : 25 : /

approximator_vecInverter : ArOR : approximator.cpp : 37 : 24 : 37 : 25 : *

approximator_vecInverter : ArOR : approximator.cpp : 37 : 24 : 37 : 25 : %

baseConverter_convertToTen : ArOR : baseConverter.cpp : 18 : 22 : 18 : 23 : +

baseConverter_convertToTen : ArOR : baseConverter.cpp : 19 : 71 : 19 : 72 : +

baseConverter_convertToTen : ROR : baseConverter.cpp : 27 : 14 : 27 : 15 : <=

baseConverter_convertToTen : ROR : baseConverter.cpp : 27 : 14 : 27 : 15 : >

baseConverter_convertToTen : ROR : baseConverter.cpp : 27 : 14 : 27 : 15 : >=

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 17 : 39 : 18 : -

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 17 : 39 : 18 : /

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 17 : 39 : 18 : %

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 17 : 39 : 18 : *

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 20 : 39 : 21 : -

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 20 : 39 : 21 : +

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 20 : 39 : 21 : *

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 20 : 39 : 21 : %

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 42 : 10 : 42 : 12 : >=

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 42 : 10 : 42 : 12 : <=

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 42 : 10 : 42 : 12 : >

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 42 : 10 : 42 : 12 : <

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 42 : 10 : 42 : 12 : !=

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 48 : 41 : 48 : 42 : -

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 61 : 14 : 61 : 15 : >=

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 61 : 14 : 61 : 15 : >

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 61 : 14 : 61 : 15 : <=

baseConverter_DnC_ConverterToTen : UOD : baseConverter.cpp : 39 : 21 : 39 : 22 : -2

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 61 : 18 : 61 : 19 : +

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 61 : 18 : 61 : 19 : /

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 61 : 18 : 61 : 19 : %

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 61 : 18 : 61 : 19 : *

baseConverter_vecInverter : ArOR : baseConverter.cpp : 97 : 20 : 97 : 21 : +

baseConverter_vecInverter : ROR : baseConverter.cpp : 97 : 25 : 97 : 27 : >

baseConverter_vecInverter : ROR : baseConverter.cpp : 97 : 25 : 97 : 27 : <

baseConverter_vecInverter : ROR : baseConverter.cpp : 97 : 25 : 97 : 27 : <=

baseConverter_vecInverter : ArOR : baseConverter.cpp : 99 : 20 : 99 : 21 : +

baseConverter_vecInverter : ArOR : baseConverter.cpp : 99 : 24 : 99 : 25 : +

baseConverter_vecInverter : ArOR : baseConverter.cpp : 99 : 24 : 99 : 25 : /

baseConverter_vecInverter : ArOR : baseConverter.cpp : 99 : 24 : 99 : 25 : %

baseConverter_vecInverter : ArOR : baseConverter.cpp : 99 : 24 : 99 : 25 : *

divider_divide : ArOR : divider.cpp : 23 : 38 : 23 : 39 : +

divider_divide : ArOR : divider.cpp : 23 : 38 : 23 : 39 : /

divider_divide : ArOR : divider.cpp : 23 : 38 : 23 : 39 : *

divider_divide : ArOR : divider.cpp : 23 : 38 : 23 : 39 : %

divider_divide : ArOR : divider.cpp : 23 : 52 : 23 : 53 : -

divider_divide : ArOR : divider.cpp : 23 : 52 : 23 : 53 : /

divider_divide : ArOR : divider.cpp : 23 : 52 : 23 : 53 : *

divider_divide : ArOR : divider.cpp : 23 : 52 : 23 : 53 : %

divider_divide : ROR : divider.cpp : 25 : 14 : 25 : 15 : >

divider_divide : ROR : divider.cpp : 25 : 14 : 25 : 15 : >=

divider_divide : ROR : divider.cpp : 25 : 14 : 25 : 15 : <=

divider_divide : ROR : divider.cpp : 29 : 22 : 29 : 23 : >

divider_divide : ROR : divider.cpp : 29 : 22 : 29 : 23 : >=

divider_divide : ROR : divider.cpp : 29 : 22 : 29 : 23 : <=

divider_divide : ArOR : divider.cpp : 31 : 24 : 31 : 25 : -

divider_divide : ArOR : divider.cpp : 31 : 24 : 31 : 25 : /

divider_divide : ArOR : divider.cpp : 31 : 24 : 31 : 25 : %

divider_divide : ArOR : divider.cpp : 31 : 24 : 31 : 25 : +

divider_divide : ArOR : divider.cpp : 44 : 26 : 44 : 27 : +

divider_divide : ArOR : divider.cpp : 44 : 26 : 44 : 27 : /

divider_divide : ArOR : divider.cpp : 44 : 26 : 44 : 27 : *

divider_divide : ArOR : divider.cpp : 44 : 26 : 44 : 27 : %

divider_divide : ROR : divider.cpp : 47 : 14 : 47 : 15 : >

divider_divide : ROR : divider.cpp : 47 : 14 : 47 : 15 : >=

divider_divide : ROR : divider.cpp : 47 : 14 : 47 : 15 : <=

divider_divide : ROR : divider.cpp : 54 : 14 : 54 : 16 : >

divider_divide : ROR : divider.cpp : 54 : 14 : 54 : 16 : <=

divider_divide : ROR : divider.cpp : 54 : 14 : 54 : 16 : <

divider_divide : ArOR : divider.cpp : 65 : 19 : 65 : 20 : -

divider_divide : ArOR : divider.cpp : 65 : 19 : 65 : 20 : /

divider_divide : ArOR : divider.cpp : 65 : 19 : 65 : 20 : *

divider_divide : ArOR : divider.cpp : 65 : 19 : 65 : 20 : %

divider_divide : ArOR : divider.cpp : 65 : 22 : 65 : 23 : %

divider_divide : ArOR : divider.cpp : 65 : 22 : 65 : 23 : -

divider_divide : ArOR : divider.cpp : 65 : 22 : 65 : 23 : *

divider_divide : ArOR : divider.cpp : 65 : 22 : 65 : 23 : +

divider_divide : ROR : divider.cpp : 69 : 18 : 69 : 20 : >=

divider_divide : ROR : divider.cpp : 69 : 18 : 69 : 20 : >

divider_divide : ROR : divider.cpp : 69 : 18 : 69 : 20 : <

divider_divide : ArOR : divider.cpp : 71 : 30 : 71 : 31 : +

divider_divide : ArOR : divider.cpp : 71 : 30 : 71 : 31 : /

divider_divide : ArOR : divider.cpp : 71 : 30 : 71 : 31 : %

divider_divide : ArOR : divider.cpp : 71 : 30 : 71 : 31 : *

divider_divide : ArOR : divider.cpp : 71 : 36 : 71 : 37 : +

divider_divide : ArOR : divider.cpp : 71 : 36 : 71 : 37 : /

divider_divide : ArOR : divider.cpp : 71 : 36 : 71 : 37 : %

divider_divide : ArOR : divider.cpp : 71 : 36 : 71 : 37 : -

divider_divide : ArOR : divider.cpp : 71 : 42 : 71 : 43 : -

divider_divide : ArOR : divider.cpp : 71 : 42 : 71 : 43 : /

divider_divide : ArOR : divider.cpp : 71 : 42 : 71 : 43 : %

divider_divide : ArOR : divider.cpp : 71 : 42 : 71 : 43 : *

divider_divide : ROR : divider.cpp : 72 : 20 : 72 : 21 : >

divider_divide : ROR : divider.cpp : 72 : 20 : 72 : 21 : >=

divider_divide : ROR : divider.cpp : 72 : 20 : 72 : 21 : <=

divider_divide : ArOR : divider.cpp : 74 : 31 : 74 : 32 : /

divider_divide : ArOR : divider.cpp : 74 : 31 : 74 : 32 : -

divider_divide : ArOR : divider.cpp : 74 : 31 : 74 : 32 : +

divider_divide : ArOR : divider.cpp : 74 : 31 : 74 : 32 : *

divider_divide : ArOR : divider.cpp : 74 : 35 : 74 : 36 : /

divider_divide : ArOR : divider.cpp : 74 : 35 : 74 : 36 : -

divider_divide : ArOR : divider.cpp : 74 : 35 : 74 : 36 : *

divider_divide : ArOR : divider.cpp : 74 : 35 : 74 : 36 : %

divider_divide : ArOR : divider.cpp : 74 : 39 : 74 : 40 : /

divider_divide : ArOR : divider.cpp : 74 : 39 : 74 : 40 : *

divider_divide : ArOR : divider.cpp : 74 : 39 : 74 : 40 : +

divider_divide : ArOR : divider.cpp : 74 : 39 : 74 : 40 : -

divider_divide : ArOR : divider.cpp : 79 : 29 : 79 : 30 : /

divider_divide : ArOR : divider.cpp : 79 : 29 : 79 : 30 : -

divider_divide : ArOR : divider.cpp : 79 : 29 : 79 : 30 : +

divider_divide : ArOR : divider.cpp : 79 : 29 : 79 : 30 : *

divider_divide : ArOR : divider.cpp : 80 : 28 : 80 : 29 : *

divider_divide : ArOR : divider.cpp : 80 : 28 : 80 : 29 : -

divider_divide : ArOR : divider.cpp : 80 : 28 : 80 : 29 : %

divider_divide : ArOR : divider.cpp : 80 : 28 : 80 : 29 : +

divider_divide : ArOR : divider.cpp : 83 : 29 : 83 : 30 : %

divider_divide : ArOR : divider.cpp : 83 : 29 : 83 : 30 : -

divider_divide : ArOR : divider.cpp : 83 : 29 : 83 : 30 : *

divider_divide : ArOR : divider.cpp : 83 : 29 : 83 : 30 : /

divider_divide : ROR : divider.cpp : 85 : 24 : 85 : 25 : <=

divider_divide : ROR : divider.cpp : 85 : 24 : 85 : 25 : >=

divider_divide : ROR : divider.cpp : 85 : 24 : 85 : 25 : >

divider_divide : ROR : divider.cpp : 88 : 22 : 88 : 24 : >=

divider_divide : ROR : divider.cpp : 88 : 22 : 88 : 24 : >

divider_divide : ROR : divider.cpp : 88 : 22 : 88 : 24 : <

divider_divide : ArOR : divider.cpp : 90 : 34 : 90 : 35 : -

divider_divide : ArOR : divider.cpp : 90 : 34 : 90 : 35 : /

divider_divide : ArOR : divider.cpp : 90 : 34 : 90 : 35 : *

divider_divide : ArOR : divider.cpp : 90 : 34 : 90 : 35 : %

divider_divide : ArOR : divider.cpp : 94 : 33 : 94 : 34 : -

divider_divide : ArOR : divider.cpp : 94 : 33 : 94 : 34 : *

divider_divide : ArOR : divider.cpp : 94 : 33 : 94 : 34 : %

divider_divide : ArOR : divider.cpp : 94 : 33 : 94 : 34 : /

divider_divide : ROR : divider.cpp : 98 : 14 : 98 : 16 : >=

divider_divide : ROR : divider.cpp : 98 : 14 : 98 : 16 : >

divider_divide : ROR : divider.cpp : 98 : 14 : 98 : 16 : ==

divider_divide : ROR : divider.cpp : 98 : 14 : 98 : 16 : <=

divider_divide : ArOR : divider.cpp : 100 : 30 : 100 : 31 : -

divider_divide : ArOR : divider.cpp : 100 : 30 : 100 : 31 : /

divider_divide : ArOR : divider.cpp : 100 : 30 : 100 : 31 : +

divider_divide : ArOR : divider.cpp : 100 : 30 : 100 : 31 : %

divider_divide : ROR : divider.cpp : 115 : 23 : 115 : 25 : >

divider_divide : ROR : divider.cpp : 115 : 23 : 115 : 25 : <=

divider_divide : ROR : divider.cpp : 115 : 23 : 115 : 25 : <

divider_divide : ArOR : divider.cpp : 119 : 33 : 119 : 34 : -

divider_truncate : COR : divider.cpp : 164 : 18 : 164 : 20 : ||

divider_truncate : COR : divider.cpp : 164 : 18 : 164 : 20 : ^

divider_truncate : ROR : divider.cpp : 164 : 13 : 164 : 15 : >=

divider_truncate : ROR : divider.cpp : 164 : 13 : 164 : 15 : >

divider_truncate : ROR : divider.cpp : 164 : 13 : 164 : 15 : <

divider_truncate : ROR : divider.cpp : 164 : 13 : 164 : 15 : <=

divider_truncate : ROR : divider.cpp : 164 : 26 : 164 : 28 : >=

divider_truncate : ROR : divider.cpp : 164 : 26 : 164 : 28 : !=

divider_truncate : ROR : divider.cpp : 164 : 26 : 164 : 28 : >

divider_truncate : ROR : divider.cpp : 164 : 26 : 164 : 28 : <

divider_truncate : ROR : divider.cpp : 164 : 26 : 164 : 28 : <=

divider_vecInverter : ArOR : divider.cpp : 195 : 24 : 195 : 25 : +

divider_vecInverter : ArOR : divider.cpp : 195 : 24 : 195 : 25 : /

divider_vecInverter : ArOR : divider.cpp : 195 : 24 : 195 : 25 : %

divider_vecInverter : ArOR : divider.cpp : 195 : 24 : 195 : 25 : *

divider_vecInverter : ROR : divider.cpp : 193 : 25 : 193 : 27 : >

divider_vecInverter : ROR : divider.cpp : 193 : 25 : 193 : 27 : <

divider_vecInverter : ROR : divider.cpp : 193 : 25 : 193 : 27 : <=

