Main_calculator : IVPR : Main.cpp : 512 : 42 : 512 : 46 : iBase

Main_calculator : IVPR : Main.cpp : 530 : 35 : 530 : 38 : two

Main_calculator : IVPR : Main.cpp : 93 : 29 : 93 : 30 : a

Main_calculator : IVPR : Main.cpp : 117 : 50 : 117 : 54 : num1

Main_calculator : IVPR : Main.cpp : 133 : 54 : 133 : 58 : num1

Main_calculator : IVPR : Main.cpp : 369 : 31 : 369 : 32 : a

Main_calculator : IVPR : Main.cpp : 405 : 40 : 405 : 44 : num2

Main_calculator : IUOI : Main.cpp : 330 : 59 : 330 : 59 : -

Main_calculator : IPEX : Main.cpp : 330 : 40 : 330 : 50 : num2, num1

Main_calculator : IPEX : Main.cpp : 253 : 48 : 253 : 58 : num1, num2

Main_calculator : IPEX : Main.cpp : 253 : 60 : 253 : 70 : P_B, iBase

Main_calculator : IPEX : Main.cpp : 405 : 40 : 405 : 50 : num2, num1

Main_calculator : IPEX : Main.cpp : 405 : 52 : 405 : 62 : P_B, iBase

Main_calculator : IMCD : Main.cpp : 369 : 16 : 369 : 33 : true

Main_calculator : IMCD : Main.cpp : 72 : 12 : 72 : 29 : true

Main_calculator : IMCD : Main.cpp : 288 : 12 : 288 : 29 : true

Main_calculator : IMCD : Main.cpp : 294 : 16 : 294 : 33 : false

Main_calculator : IMCD : Main.cpp : 363 : 12 : 363 : 29 : true

Main_calculator : IMCD : Main.cpp : 186 : 16 : 186 : 33 : true

Main_calculator : IREM : Main.cpp : 922 : 12 : 922 : 12 : !

Main_calculator : ArOR : Main.cpp : 95 : 33 : 95 : 34 : -

Main_calculator : COR : Main.cpp : 113 : 31 : 113 : 33 : ||

Main_calculator : COR : Main.cpp : 113 : 31 : 113 : 33 : ^

Main_calculator : COR : Main.cpp : 113 : 41 : 113 : 43 : &&

Main_calculator : ArOR : Main.cpp : 119 : 65 : 119 : 66 : +

Main_calculator : ROR : Main.cpp : 692 : 14 : 692 : 16 : <

Main_calculator : ROR : Main.cpp : 692 : 14 : 692 : 16 : >=

Main_calculator : ROR : Main.cpp : 692 : 14 : 692 : 16 : >

Main_calculator : ArOR : Main.cpp : 683 : 34 : 683 : 35 : -

Main_calculator : ArOR : Main.cpp : 683 : 34 : 683 : 35 : *

Main_calculator : ArOR : Main.cpp : 683 : 34 : 683 : 35 : /

Main_calculator : ArOR : Main.cpp : 683 : 34 : 683 : 35 : %

adder_add : ROR : adder.cpp : 23 : 10 : 23 : 11 : <

adder_add : ROR : adder.cpp : 25 : 25 : 25 : 26 : >

adder_add : ArOR : adder.cpp : 25 : 29 : 25 : 30 : +

adder_add : ArOR : adder.cpp : 33 : 29 : 33 : 30 : +

adder_add : ArOR : adder.cpp : 25 : 29 : 25 : 30 : *

adder_add : ArOR : adder.cpp : 33 : 29 : 33 : 30 : *

adder_add : ArOR : adder.cpp : 25 : 29 : 25 : 30 : /

adder_add : ArOR : adder.cpp : 33 : 29 : 33 : 30 : /

adder_add : ArOR : adder.cpp : 25 : 27 : 25 : 30 : 

adder_add : ArOR : adder.cpp : 33 : 27 : 33 : 30 : 

adder_add : ArOR : adder.cpp : 25 : 29 : 25 : 32 : 

adder_add : ArOR : adder.cpp : 33 : 29 : 33 : 32 : 

adder_add : ArOR : adder.cpp : 25 : 29 : 25 : 30 : %

adder_add : ArOR : adder.cpp : 33 : 29 : 33 : 30 : %

adder_add : ROR : adder.cpp : 23 : 10 : 23 : 11 : ==

adder_add : ROR : adder.cpp : 25 : 25 : 25 : 26 : ==

adder_truncate : COR : adder.cpp : 112 : 18 : 112 : 20 : ||

adder_truncate : COR : adder.cpp : 112 : 18 : 112 : 20 : ^

adder_truncate : COR : adder.cpp : 112 : 18 : 112 : 20 : &

adder_add : ArOR : adder.cpp : 57 : 70 : 57 : 71 : -

adder_add : ArOR : adder.cpp : 57 : 70 : 57 : 71 : /

adder_add : ArOR : adder.cpp : 57 : 70 : 57 : 71 : +

adder_add : ArOR : adder.cpp : 57 : 70 : 57 : 75 : 

adder_add : ArOR : adder.cpp : 58 : 60 : 58 : 61 : %

adder_add : ArOR : adder.cpp : 58 : 60 : 58 : 61 : -

adder_add : ROR : adder.cpp : 80 : 14 : 80 : 16 : == 

adder_add : ROR : adder.cpp : 80 : 14 : 80 : 16 : >=

adder_add : AVI : adder.cpp : 29 : 24 : 29 : 26 : abs(p1)

adder_add : AVI : adder.cpp : 29 : 24 : 29 : 26 : (-abs(p1))

adder_add : AsOR : adder.cpp : 58 : 19 : 58 : 19 : +

adder_add : AsOR : adder.cpp : 58 : 19 : 58 : 19 : *

adder_add : AsOR : adder.cpp : 58 : 19 : 58 : 19 : /

adder_add : UOD : adder.cpp : 29 : 23 : 29 : 24 : 

approximator_roundOff : ArOR : approximator.cpp : 6 : 34 : 6 : 35 : -

approximator_roundOff : ArOR : approximator.cpp : 6 : 34 : 6 : 35 : *

approximator_roundOff : ArOR : approximator.cpp : 6 : 34 : 6 : 35 : /

approximator_roundOff : ArOR : approximator.cpp : 6 : 34 : 6 : 35 : %

approximator_roundOff : ArOR : approximator.cpp : 6 : 47 : 6 : 48 : -

approximator_roundOff : ArOR : approximator.cpp : 6 : 47 : 6 : 48 : *

approximator_roundOff : ArOR : approximator.cpp : 6 : 47 : 6 : 48 : /

approximator_roundOff : ArOR : approximator.cpp : 6 : 47 : 6 : 48 : %

approximator_roundOff : ArOR : approximator.cpp : 6 : 59 : 6 : 60 : -

approximator_roundOff : UOD : approximator.cpp : 13 : 21 : 13 : 21 : -

approximator_roundOff : ArOR : approximator.cpp : 13 : 20 : 13 : 21 : /

approximator_roundOff : ArOR : approximator.cpp : 13 : 20 : 13 : 21 : +

approximator_roundOff : ArOR : approximator.cpp : 13 : 20 : 13 : 21 : %

approximator_roundOff : ArOR : approximator.cpp : 13 : 20 : 13 : 21 : -

approximator_roundOff : ROR : approximator.cpp : 21 : 14 : 21 : 16 : <=

approximator_roundOff : ROR : approximator.cpp : 21 : 14 : 21 : 16 : !=

approximator_roundOff : ROR : approximator.cpp : 21 : 14 : 21 : 16 : >

approximator_roundOff : ROR : approximator.cpp : 21 : 14 : 21 : 16 : <

approximator_roundOff : ROR : approximator.cpp : 21 : 28 : 21 : 30 : <

approximator_roundOff : ROR : approximator.cpp : 21 : 28 : 21 : 30 : >

approximator_roundOff : ROR : approximator.cpp : 21 : 28 : 21 : 30 : >=

approximator_roundOff : ROR : approximator.cpp : 21 : 28 : 21 : 30 : !=

approximator_roundOff : ArOR : approximator.cpp : 24 : 51 : 24 : 52 : -

approximator_roundOff : ArOR : approximator.cpp : 24 : 59 : 24 : 60 : -

approximator_roundOff : ArOR : approximator.cpp : 24 : 59 : 24 : 60 : /

approximator_roundOff : ArOR : approximator.cpp : 24 : 59 : 24 : 60 : *

approximator_roundOff : ArOR : approximator.cpp : 24 : 59 : 24 : 60 : %

approximator_roundOff : AVI : approximator.cpp : 26 : 23 : 26 : 32 : (-abs(precision))

approximator_roundOff : COR : approximator.cpp : 21 : 19 : 21 : 21 : ||

approximator_roundOff : COR : approximator.cpp : 21 : 19 : 21 : 21 : ^

approximator_vecInverter : ArOR : approximator.cpp : 35 : 20 : 35 : 21 : +

approximator_vecInverter : ROR : approximator.cpp : 35 : 25 : 35 : 27 : <=

approximator_vecInverter : ROR : approximator.cpp : 35 : 25 : 35 : 27 : =

approximator_vecInverter : ROR : approximator.cpp : 35 : 25 : 35 : 27 : <

approximator_vecInverter : ROR : approximator.cpp : 35 : 25 : 35 : 27 : >

approximator_vecInverter : ArOR : approximator.cpp : 37 : 20 : 37 : 21 : +

approximator_vecInverter : ArOR : approximator.cpp : 37 : 24 : 37 : 25 : +

approximator_vecInverter : ArOR : approximator.cpp : 37 : 24 : 37 : 25 : /

approximator_vecInverter : ArOR : approximator.cpp : 37 : 24 : 37 : 25 : *

approximator_vecInverter : ArOR : approximator.cpp : 37 : 24 : 37 : 25 : %

baseConverter_convertToTen : ArOR : baseConverter.cpp : 18 : 22 : 18 : 23 : +

baseConverter_convertToTen : ArOR : baseConverter.cpp : 19 : 71 : 19 : 72 : +

baseConverter_convertToTen : ROR : baseConverter.cpp : 27 : 14 : 27 : 15 : <=

baseConverter_convertToTen : ROR : baseConverter.cpp : 27 : 14 : 27 : 15 : >

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 17 : 39 : 18 : -

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 17 : 39 : 18 : /

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 17 : 39 : 18 : %

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 17 : 39 : 18 : *

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 20 : 39 : 21 : -

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 20 : 39 : 21 : +

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 20 : 39 : 21 : *

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 39 : 20 : 39 : 21 : %

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 42 : 10 : 42 : 12 : >=

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 42 : 10 : 42 : 12 : <=

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 42 : 10 : 42 : 12 : >

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 42 : 10 : 42 : 12 : <

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 42 : 10 : 42 : 12 : !=

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 48 : 41 : 48 : 42 : -

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 61 : 14 : 61 : 15 : >=

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 61 : 14 : 61 : 15 : >

baseConverter_DnC_ConverterToTen : ROR : baseConverter.cpp : 61 : 14 : 61 : 15 : <=

baseConverter_DnC_ConverterToTen : UOD : baseConverter.cpp : 39 : 21 : 39 : 22 : -2

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 61 : 18 : 61 : 19 : +

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 61 : 18 : 61 : 19 : /

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 61 : 18 : 61 : 19 : %

baseConverter_DnC_ConverterToTen : ArOR : baseConverter.cpp : 61 : 18 : 61 : 19 : *

baseConverter_vecInverter : ArOR : baseConverter.cpp : 97 : 20 : 97 : 21 : +

baseConverter_vecInverter : ROR : baseConverter.cpp : 97 : 25 : 97 : 27 : >

baseConverter_vecInverter : ROR : baseConverter.cpp : 97 : 25 : 97 : 27 : <

baseConverter_vecInverter : ROR : baseConverter.cpp : 97 : 25 : 97 : 27 : <=

baseConverter_vecInverter : ArOR : baseConverter.cpp : 99 : 20 : 99 : 21 : +

baseConverter_vecInverter : ArOR : baseConverter.cpp : 99 : 24 : 99 : 25 : +

baseConverter_vecInverter : ArOR : baseConverter.cpp : 99 : 24 : 99 : 25 : /

baseConverter_vecInverter : ArOR : baseConverter.cpp : 99 : 24 : 99 : 25 : %

baseConverter_vecInverter : ArOR : baseConverter.cpp : 99 : 24 : 99 : 25 : *

divider_divide : ArOR : divider.cpp : 23 : 38 : 23 : 39 : +

divider_divide : ArOR : divider.cpp : 23 : 38 : 23 : 39 : /

divider_divide : ArOR : divider.cpp : 23 : 38 : 23 : 39 : *

divider_divide : ArOR : divider.cpp : 23 : 38 : 23 : 39 : %

divider_divide : ArOR : divider.cpp : 23 : 52 : 23 : 53 : -

divider_divide : ArOR : divider.cpp : 23 : 52 : 23 : 53 : /

divider_divide : ArOR : divider.cpp : 23 : 52 : 23 : 53 : *

divider_divide : ArOR : divider.cpp : 23 : 52 : 23 : 53 : %

divider_divide : ROR : divider.cpp : 25 : 14 : 25 : 15 : >

divider_divide : ROR : divider.cpp : 25 : 14 : 25 : 15 : >=

divider_divide : ROR : divider.cpp : 25 : 14 : 25 : 15 : <=

divider_divide : ROR : divider.cpp : 29 : 22 : 29 : 23 : >

divider_divide : ROR : divider.cpp : 29 : 22 : 29 : 23 : >=

divider_divide : ROR : divider.cpp : 29 : 22 : 29 : 23 : <=

divider_divide : ArOR : divider.cpp : 31 : 24 : 31 : 25 : -

divider_divide : ArOR : divider.cpp : 31 : 24 : 31 : 25 : /

divider_divide : ArOR : divider.cpp : 31 : 24 : 31 : 25 : %

divider_divide : ArOR : divider.cpp : 31 : 24 : 31 : 25 : +

divider_divide : ArOR : divider.cpp : 44 : 26 : 44 : 27 : /

divider_divide : ArOR : divider.cpp : 44 : 26 : 44 : 27 : *

divider_divide : ArOR : divider.cpp : 44 : 26 : 44 : 27 : %

divider_divide : ROR : divider.cpp : 47 : 14 : 47 : 15 : <=

divider_divide : ROR : divider.cpp : 54 : 14 : 54 : 16 : >

divider_divide : ROR : divider.cpp : 54 : 14 : 54 : 16 : <=

divider_divide : ROR : divider.cpp : 54 : 14 : 54 : 16 : <

divider_divide : ArOR : divider.cpp : 65 : 19 : 65 : 20 : /

divider_divide : ArOR : divider.cpp : 65 : 19 : 65 : 20 : *

divider_divide : ArOR : divider.cpp : 65 : 19 : 65 : 20 : %

divider_divide : ArOR : divider.cpp : 65 : 22 : 65 : 23 : %

divider_divide : ArOR : divider.cpp : 65 : 22 : 65 : 23 : -

divider_divide : ArOR : divider.cpp : 65 : 22 : 65 : 23 : *

divider_divide : ArOR : divider.cpp : 65 : 22 : 65 : 23 : +

divider_divide : ROR : divider.cpp : 69 : 18 : 69 : 20 : <

divider_divide : ArOR : divider.cpp : 71 : 30 : 71 : 31 : +

divider_divide : ArOR : divider.cpp : 71 : 30 : 71 : 31 : /

divider_divide : ArOR : divider.cpp : 71 : 30 : 71 : 31 : %

divider_divide : ArOR : divider.cpp : 71 : 30 : 71 : 31 : *

divider_divide : ArOR : divider.cpp : 71 : 36 : 71 : 37 : +

divider_divide : ArOR : divider.cpp : 71 : 36 : 71 : 37 : /

divider_divide : ArOR : divider.cpp : 71 : 36 : 71 : 37 : %

divider_divide : ArOR : divider.cpp : 71 : 36 : 71 : 37 : -

divider_divide : ArOR : divider.cpp : 71 : 42 : 71 : 43 : -

divider_divide : ArOR : divider.cpp : 71 : 42 : 71 : 43 : /

divider_divide : ArOR : divider.cpp : 71 : 42 : 71 : 43 : %

divider_divide : ArOR : divider.cpp : 71 : 42 : 71 : 43 : *

divider_divide : ROR : divider.cpp : 72 : 20 : 72 : 21 : >

divider_divide : ROR : divider.cpp : 72 : 20 : 72 : 21 : >=

divider_divide : ROR : divider.cpp : 72 : 20 : 72 : 21 : <=

divider_divide : ArOR : divider.cpp : 74 : 31 : 74 : 32 : /

divider_divide : ArOR : divider.cpp : 74 : 31 : 74 : 32 : -

divider_divide : ArOR : divider.cpp : 74 : 31 : 74 : 32 : +

divider_divide : ArOR : divider.cpp : 74 : 31 : 74 : 32 : *

divider_divide : ArOR : divider.cpp : 74 : 35 : 74 : 36 : /

divider_divide : ArOR : divider.cpp : 74 : 35 : 74 : 36 : -

divider_divide : ArOR : divider.cpp : 74 : 35 : 74 : 36 : *

divider_divide : ArOR : divider.cpp : 74 : 35 : 74 : 36 : %

divider_divide : ArOR : divider.cpp : 74 : 39 : 74 : 40 : /

divider_divide : ArOR : divider.cpp : 74 : 39 : 74 : 40 : *

divider_divide : ArOR : divider.cpp : 74 : 39 : 74 : 40 : +

divider_divide : ArOR : divider.cpp : 74 : 39 : 74 : 40 : -

divider_divide : ArOR : divider.cpp : 79 : 29 : 79 : 30 : /

divider_divide : ArOR : divider.cpp : 79 : 29 : 79 : 30 : -

divider_divide : ArOR : divider.cpp : 79 : 29 : 79 : 30 : +

divider_divide : ArOR : divider.cpp : 79 : 29 : 79 : 30 : *

divider_divide : ArOR : divider.cpp : 80 : 28 : 80 : 29 : *

divider_divide : ArOR : divider.cpp : 80 : 28 : 80 : 29 : -

divider_divide : ArOR : divider.cpp : 80 : 28 : 80 : 29 : %

divider_divide : ArOR : divider.cpp : 80 : 28 : 80 : 29 : +

divider_divide : ArOR : divider.cpp : 83 : 29 : 83 : 30 : %

divider_divide : ArOR : divider.cpp : 83 : 29 : 83 : 30 : -

divider_divide : ArOR : divider.cpp : 83 : 29 : 83 : 30 : *

divider_divide : ArOR : divider.cpp : 83 : 29 : 83 : 30 : /

divider_divide : ROR : divider.cpp : 85 : 24 : 85 : 25 : <=

divider_divide : ROR : divider.cpp : 85 : 24 : 85 : 25 : >

divider_divide : ROR : divider.cpp : 88 : 22 : 88 : 24 : <

divider_divide : ArOR : divider.cpp : 90 : 34 : 90 : 35 : *

divider_divide : ArOR : divider.cpp : 94 : 33 : 94 : 34 : *

divider_divide : ArOR : divider.cpp : 94 : 33 : 94 : 34 : %

divider_divide : ArOR : divider.cpp : 94 : 33 : 94 : 34 : /

divider_divide : ROR : divider.cpp : 98 : 14 : 98 : 16 : >=

divider_divide : ROR : divider.cpp : 98 : 14 : 98 : 16 : >

divider_divide : ROR : divider.cpp : 98 : 14 : 98 : 16 : ==

divider_divide : ROR : divider.cpp : 98 : 14 : 98 : 16 : <=

divider_divide : ArOR : divider.cpp : 100 : 30 : 100 : 31 : -

divider_divide : ArOR : divider.cpp : 100 : 30 : 100 : 31 : /

divider_divide : ArOR : divider.cpp : 100 : 30 : 100 : 31 : +

divider_divide : ArOR : divider.cpp : 100 : 30 : 100 : 31 : %

divider_divide : ROR : divider.cpp : 115 : 23 : 115 : 25 : >

divider_divide : ROR : divider.cpp : 115 : 23 : 115 : 25 : <=

divider_divide : ROR : divider.cpp : 115 : 23 : 115 : 25 : <

divider_divide : ArOR : divider.cpp : 119 : 33 : 119 : 34 : -

divider_truncate : COR : divider.cpp : 164 : 18 : 164 : 20 : ||

divider_truncate : COR : divider.cpp : 164 : 18 : 164 : 20 : ^

divider_truncate : ROR : divider.cpp : 164 : 13 : 164 : 15 : >=

divider_truncate : ROR : divider.cpp : 164 : 13 : 164 : 15 : >

divider_truncate : ROR : divider.cpp : 164 : 13 : 164 : 15 : <

divider_truncate : ROR : divider.cpp : 164 : 13 : 164 : 15 : <=

divider_truncate : ROR : divider.cpp : 164 : 26 : 164 : 28 : >=

divider_truncate : ROR : divider.cpp : 164 : 26 : 164 : 28 : !=

divider_truncate : ROR : divider.cpp : 164 : 26 : 164 : 28 : >

divider_truncate : ROR : divider.cpp : 164 : 26 : 164 : 28 : <

divider_truncate : ROR : divider.cpp : 164 : 26 : 164 : 28 : <=

divider_vecInverter : ArOR : divider.cpp : 195 : 24 : 195 : 25 : +

divider_vecInverter : ArOR : divider.cpp : 195 : 24 : 195 : 25 : /

divider_vecInverter : ArOR : divider.cpp : 195 : 24 : 195 : 25 : %

divider_vecInverter : ArOR : divider.cpp : 195 : 24 : 195 : 25 : *

divider_vecInverter : ROR : divider.cpp : 193 : 25 : 193 : 27 : >

divider_vecInverter : ROR : divider.cpp : 193 : 25 : 193 : 27 : <

divider_vecInverter : ROR : divider.cpp : 193 : 25 : 193 : 27 : <=

squareRoot_sqRootOf : ArOR : squareRoot.cpp : 51 : 25 : 51 : 26 : /

squareRoot_sqRootOf : ArOR : squareRoot.cpp : 51 : 43 : 51 : 44 : -

squareRoot_sqRootOf : ArOR : squareRoot.cpp : 51 : 43 : 51 : 44 : *

squareRoot_sqRootOf : ArOR : squareRoot.cpp : 51 : 43 : 51 : 44 : /

squareRoot_sqRootOf : ArOR : squareRoot.cpp : 60 : 34 : 60 : 35 : *

squareRoot_sqRootOf : ArOR : squareRoot.cpp : 60 : 34 : 60 : 35 : +

squareRoot_sqRootOf : ArOR : squareRoot.cpp : 60 : 34 : 60 : 35 : /

squareRoot_sqRootOf : ArOR : squareRoot.cpp : 60 : 34 : 60 : 35 : %

squareRoot_sqRootOf : ROR : squareRoot.cpp : 65 : 27 : 65 : 29 : >=

squareRoot_sqRootOf : ROR : squareRoot.cpp : 65 : 27 : 65 : 29 : >

squareRoot_sqRootOf : ROR : squareRoot.cpp : 65 : 27 : 65 : 29 : <

squareRoot_sqRootOf : UOD : squareRoot.cpp : 61 : 27 : 61 : 27 : -

multiplier_multiply : AsOR : multiplier.cpp : 29 : 19 : 29 : 21 : -=

multiplier_multiply : AsOR : multiplier.cpp : 29 : 19 : 29 : 21 : *=

multiplier_multiply : AsOR : multiplier.cpp : 29 : 19 : 29 : 21 : /=

multiplier_multiply : AsOR : multiplier.cpp : 29 : 19 : 29 : 21 : %=

multiplier_vecInverter : ROR : multiplier.cpp : 146 : 25 : 146 : 27 : <=

multiplier_vecInverter : ROR : multiplier.cpp : 146 : 25 : 146 : 27 : >

multiplier_vecInverter : ROR : multiplier.cpp : 146 : 25 : 146 : 27 : <

multiplier_multiply : ArOR : multiplier.cpp : 133 : 19 : 133 : 20 : +

multiplier_vecInverter : ArOR : multiplier.cpp : 148 : 24 : 148 : 25 : *

multiplier_vecInverter : ArOR : multiplier.cpp : 148 : 24 : 148 : 25 : +

multiplier_vecInverter : ArOR : multiplier.cpp : 148 : 24 : 148 : 25 : /

multiplier_vecInverter : ArOR : multiplier.cpp : 148 : 24 : 148 : 25 : %

subtractor_truncate : COR : subtractor.cpp : 144 : 18 : 144 : 20 : ||

subtractor_subtract : AVI : subtractor.cpp : 30 : 24 : 30 : 26 : abs(p1)

subtractor_subtract : AVI : subtractor.cpp : 38 : 24 : 38 : 26 : abs(p2)

subtractor_subtract : ROR : subtractor.cpp : 32 : 15 : 32 : 16 : >=

subtractor_subtract : ROR : subtractor.cpp : 32 : 15 : 32 : 16 : <=

subtractor_subtract : ROR : subtractor.cpp : 32 : 15 : 32 : 16 : >

subtractor_subtract : ROR : subtractor.cpp : 53 : 10 : 53 : 12 : >

subtractor_subtract : ROR : subtractor.cpp : 53 : 10 : 53 : 12 : <=

subtractor_subtract : ROR : subtractor.cpp : 53 : 10 : 53 : 12 : <

subtractor_truncate : COR : subtractor.cpp : 144 : 18 : 144 : 20 : ||

subtractor_truncate : ArOR : subtractor.cpp : 143 : 19 : 143 : 20 : +

